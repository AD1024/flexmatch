#[version = "0.0.5"]

def @main(%image: Tensor[(1, 3, 224, 224), float32] /* ty=Tensor[(1, 3, 224, 224), float32] span=from_string:8:18 */, %conv1_weight: Tensor[(64, 3, 7, 7), float32] /* ty=Tensor[(64, 3, 7, 7), float32] span=from_string:8:27 */, %bn1_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:7:22 */, %bn1_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:12:16 */, %bn1_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:10:17 */, %bn1_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:4:12 */, %layer1_0_conv1_weight: Tensor[(64, 64, 1, 1), float32] /* ty=Tensor[(64, 64, 1, 1), float32] span=from_string:22:24 */, %layer1_0_bn1_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:21:24 */, %layer1_0_bn1_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:26:18 */, %layer1_0_bn1_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:24:18 */, %layer1_0_bn1_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:18:13 */, %layer1_0_conv2_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] span=from_string:35:24 */, %layer1_0_bn2_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:34:24 */, %layer1_0_bn2_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:39:18 */, %layer1_0_bn2_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:37:18 */, %layer1_0_bn2_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:31:13 */, %layer1_0_conv3_weight: Tensor[(256, 64, 1, 1), float32] /* ty=Tensor[(256, 64, 1, 1), float32] span=from_string:48:24 */, %layer1_0_bn3_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:47:24 */, %layer1_0_bn3_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:52:18 */, %layer1_0_bn3_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:50:18 */, %layer1_0_bn3_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:44:13 */, %layer1_0_downsample_0_weight: Tensor[(256, 64, 1, 1), float32] /* ty=Tensor[(256, 64, 1, 1), float32] span=from_string:59:24 */, %layer1_0_downsample_1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:58:24 */, %layer1_0_downsample_1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:63:18 */, %layer1_0_downsample_1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:61:18 */, %layer1_0_downsample_1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:55:13 */, %layer1_1_conv1_weight: Tensor[(64, 256, 1, 1), float32] /* ty=Tensor[(64, 256, 1, 1), float32] span=from_string:74:24 */, %layer1_1_bn1_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:73:24 */, %layer1_1_bn1_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:78:18 */, %layer1_1_bn1_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:76:18 */, %layer1_1_bn1_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:70:13 */, %layer1_1_conv2_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] span=from_string:87:24 */, %layer1_1_bn2_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:86:24 */, %layer1_1_bn2_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:91:18 */, %layer1_1_bn2_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:89:18 */, %layer1_1_bn2_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:83:13 */, %layer1_1_conv3_weight: Tensor[(256, 64, 1, 1), float32] /* ty=Tensor[(256, 64, 1, 1), float32] span=from_string:100:24 */, %layer1_1_bn3_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:99:24 */, %layer1_1_bn3_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:104:19 */, %layer1_1_bn3_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:102:18 */, %layer1_1_bn3_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:96:13 */, %layer1_2_conv1_weight: Tensor[(64, 256, 1, 1), float32] /* ty=Tensor[(64, 256, 1, 1), float32] span=from_string:114:26 */, %layer1_2_bn1_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:113:26 */, %layer1_2_bn1_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:118:20 */, %layer1_2_bn1_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:116:19 */, %layer1_2_bn1_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:110:14 */, %layer1_2_conv2_weight: Tensor[(64, 64, 3, 3), float32] /* ty=Tensor[(64, 64, 3, 3), float32] span=from_string:127:26 */, %layer1_2_bn2_weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:126:26 */, %layer1_2_bn2_bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:131:20 */, %layer1_2_bn2_running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:129:19 */, %layer1_2_bn2_running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] span=from_string:123:14 */, %layer1_2_conv3_weight: Tensor[(256, 64, 1, 1), float32] /* ty=Tensor[(256, 64, 1, 1), float32] span=from_string:140:26 */, %layer1_2_bn3_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:139:26 */, %layer1_2_bn3_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:144:20 */, %layer1_2_bn3_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:142:19 */, %layer1_2_bn3_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:136:14 */, %layer2_0_conv1_weight: Tensor[(128, 256, 1, 1), float32] /* ty=Tensor[(128, 256, 1, 1), float32] span=from_string:154:26 */, %layer2_0_bn1_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:153:26 */, %layer2_0_bn1_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:158:20 */, %layer2_0_bn1_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:156:19 */, %layer2_0_bn1_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:150:14 */, %layer2_0_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] span=from_string:167:26 */, %layer2_0_bn2_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:166:26 */, %layer2_0_bn2_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:171:20 */, %layer2_0_bn2_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:169:19 */, %layer2_0_bn2_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:163:14 */, %layer2_0_conv3_weight: Tensor[(512, 128, 1, 1), float32] /* ty=Tensor[(512, 128, 1, 1), float32] span=from_string:180:26 */, %layer2_0_bn3_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:179:26 */, %layer2_0_bn3_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:184:20 */, %layer2_0_bn3_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:182:19 */, %layer2_0_bn3_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:176:14 */, %layer2_0_downsample_0_weight: Tensor[(512, 256, 1, 1), float32] /* ty=Tensor[(512, 256, 1, 1), float32] span=from_string:191:26 */, %layer2_0_downsample_1_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:190:26 */, %layer2_0_downsample_1_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:195:20 */, %layer2_0_downsample_1_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:193:19 */, %layer2_0_downsample_1_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:187:14 */, %layer2_1_conv1_weight: Tensor[(128, 512, 1, 1), float32] /* ty=Tensor[(128, 512, 1, 1), float32] span=from_string:206:26 */, %layer2_1_bn1_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:205:26 */, %layer2_1_bn1_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:210:20 */, %layer2_1_bn1_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:208:19 */, %layer2_1_bn1_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:202:14 */, %layer2_1_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] span=from_string:219:26 */, %layer2_1_bn2_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:218:26 */, %layer2_1_bn2_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:223:20 */, %layer2_1_bn2_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:221:19 */, %layer2_1_bn2_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:215:14 */, %layer2_1_conv3_weight: Tensor[(512, 128, 1, 1), float32] /* ty=Tensor[(512, 128, 1, 1), float32] span=from_string:232:26 */, %layer2_1_bn3_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:231:26 */, %layer2_1_bn3_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:236:20 */, %layer2_1_bn3_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:234:19 */, %layer2_1_bn3_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:228:14 */, %layer2_2_conv1_weight: Tensor[(128, 512, 1, 1), float32] /* ty=Tensor[(128, 512, 1, 1), float32] span=from_string:246:26 */, %layer2_2_bn1_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:245:26 */, %layer2_2_bn1_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:250:20 */, %layer2_2_bn1_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:248:19 */, %layer2_2_bn1_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:242:14 */, %layer2_2_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] span=from_string:259:26 */, %layer2_2_bn2_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:258:26 */, %layer2_2_bn2_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:263:20 */, %layer2_2_bn2_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:261:19 */, %layer2_2_bn2_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:255:14 */, %layer2_2_conv3_weight: Tensor[(512, 128, 1, 1), float32] /* ty=Tensor[(512, 128, 1, 1), float32] span=from_string:272:26 */, %layer2_2_bn3_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:271:26 */, %layer2_2_bn3_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:276:20 */, %layer2_2_bn3_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:274:19 */, %layer2_2_bn3_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:268:14 */, %layer2_3_conv1_weight: Tensor[(128, 512, 1, 1), float32] /* ty=Tensor[(128, 512, 1, 1), float32] span=from_string:286:26 */, %layer2_3_bn1_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:285:26 */, %layer2_3_bn1_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:290:20 */, %layer2_3_bn1_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:288:19 */, %layer2_3_bn1_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:282:14 */, %layer2_3_conv2_weight: Tensor[(128, 128, 3, 3), float32] /* ty=Tensor[(128, 128, 3, 3), float32] span=from_string:299:26 */, %layer2_3_bn2_weight: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:298:26 */, %layer2_3_bn2_bias: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:303:20 */, %layer2_3_bn2_running_mean: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:301:19 */, %layer2_3_bn2_running_var: Tensor[(128), float32] /* ty=Tensor[(128), float32] span=from_string:295:14 */, %layer2_3_conv3_weight: Tensor[(512, 128, 1, 1), float32] /* ty=Tensor[(512, 128, 1, 1), float32] span=from_string:312:26 */, %layer2_3_bn3_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:311:26 */, %layer2_3_bn3_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:316:20 */, %layer2_3_bn3_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:314:19 */, %layer2_3_bn3_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:308:14 */, %layer3_0_conv1_weight: Tensor[(256, 512, 1, 1), float32] /* ty=Tensor[(256, 512, 1, 1), float32] span=from_string:326:26 */, %layer3_0_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:325:26 */, %layer3_0_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:330:20 */, %layer3_0_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:328:19 */, %layer3_0_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:322:14 */, %layer3_0_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:339:26 */, %layer3_0_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:338:26 */, %layer3_0_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:343:20 */, %layer3_0_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:341:19 */, %layer3_0_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:335:14 */, %layer3_0_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:352:26 */, %layer3_0_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:351:26 */, %layer3_0_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:356:20 */, %layer3_0_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:354:19 */, %layer3_0_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:348:14 */, %layer3_0_downsample_0_weight: Tensor[(1024, 512, 1, 1), float32] /* ty=Tensor[(1024, 512, 1, 1), float32] span=from_string:363:26 */, %layer3_0_downsample_1_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:362:26 */, %layer3_0_downsample_1_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:367:20 */, %layer3_0_downsample_1_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:365:19 */, %layer3_0_downsample_1_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:359:14 */, %layer3_1_conv1_weight: Tensor[(256, 1024, 1, 1), float32] /* ty=Tensor[(256, 1024, 1, 1), float32] span=from_string:378:26 */, %layer3_1_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:377:26 */, %layer3_1_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:382:20 */, %layer3_1_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:380:19 */, %layer3_1_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:374:14 */, %layer3_1_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:391:26 */, %layer3_1_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:390:26 */, %layer3_1_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:395:20 */, %layer3_1_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:393:19 */, %layer3_1_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:387:14 */, %layer3_1_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:404:26 */, %layer3_1_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:403:26 */, %layer3_1_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:408:20 */, %layer3_1_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:406:19 */, %layer3_1_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:400:14 */, %layer3_2_conv1_weight: Tensor[(256, 1024, 1, 1), float32] /* ty=Tensor[(256, 1024, 1, 1), float32] span=from_string:418:26 */, %layer3_2_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:417:26 */, %layer3_2_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:422:20 */, %layer3_2_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:420:19 */, %layer3_2_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:414:14 */, %layer3_2_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:431:26 */, %layer3_2_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:430:26 */, %layer3_2_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:435:20 */, %layer3_2_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:433:19 */, %layer3_2_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:427:14 */, %layer3_2_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:444:26 */, %layer3_2_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:443:26 */, %layer3_2_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:448:20 */, %layer3_2_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:446:19 */, %layer3_2_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:440:14 */, %layer3_3_conv1_weight: Tensor[(256, 1024, 1, 1), float32] /* ty=Tensor[(256, 1024, 1, 1), float32] span=from_string:458:26 */, %layer3_3_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:457:26 */, %layer3_3_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:462:20 */, %layer3_3_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:460:19 */, %layer3_3_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:454:14 */, %layer3_3_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:471:26 */, %layer3_3_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:470:26 */, %layer3_3_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:475:20 */, %layer3_3_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:473:19 */, %layer3_3_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:467:14 */, %layer3_3_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:484:26 */, %layer3_3_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:483:26 */, %layer3_3_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:488:20 */, %layer3_3_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:486:19 */, %layer3_3_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:480:14 */, %layer3_4_conv1_weight: Tensor[(256, 1024, 1, 1), float32] /* ty=Tensor[(256, 1024, 1, 1), float32] span=from_string:498:26 */, %layer3_4_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:497:26 */, %layer3_4_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:502:20 */, %layer3_4_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:500:19 */, %layer3_4_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:494:14 */, %layer3_4_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:511:26 */, %layer3_4_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:510:26 */, %layer3_4_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:515:20 */, %layer3_4_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:513:19 */, %layer3_4_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:507:14 */, %layer3_4_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:524:26 */, %layer3_4_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:523:26 */, %layer3_4_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:528:20 */, %layer3_4_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:526:19 */, %layer3_4_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:520:14 */, %layer3_5_conv1_weight: Tensor[(256, 1024, 1, 1), float32] /* ty=Tensor[(256, 1024, 1, 1), float32] span=from_string:538:26 */, %layer3_5_bn1_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:537:26 */, %layer3_5_bn1_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:542:20 */, %layer3_5_bn1_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:540:19 */, %layer3_5_bn1_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:534:14 */, %layer3_5_conv2_weight: Tensor[(256, 256, 3, 3), float32] /* ty=Tensor[(256, 256, 3, 3), float32] span=from_string:551:26 */, %layer3_5_bn2_weight: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:550:26 */, %layer3_5_bn2_bias: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:555:20 */, %layer3_5_bn2_running_mean: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:553:19 */, %layer3_5_bn2_running_var: Tensor[(256), float32] /* ty=Tensor[(256), float32] span=from_string:547:14 */, %layer3_5_conv3_weight: Tensor[(1024, 256, 1, 1), float32] /* ty=Tensor[(1024, 256, 1, 1), float32] span=from_string:564:26 */, %layer3_5_bn3_weight: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:563:26 */, %layer3_5_bn3_bias: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:568:20 */, %layer3_5_bn3_running_mean: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:566:19 */, %layer3_5_bn3_running_var: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] span=from_string:560:14 */, %layer4_0_conv1_weight: Tensor[(512, 1024, 1, 1), float32] /* ty=Tensor[(512, 1024, 1, 1), float32] span=from_string:578:26 */, %layer4_0_bn1_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:577:26 */, %layer4_0_bn1_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:582:20 */, %layer4_0_bn1_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:580:19 */, %layer4_0_bn1_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:574:14 */, %layer4_0_conv2_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] span=from_string:591:26 */, %layer4_0_bn2_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:590:26 */, %layer4_0_bn2_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:595:20 */, %layer4_0_bn2_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:593:19 */, %layer4_0_bn2_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:587:14 */, %layer4_0_conv3_weight: Tensor[(2048, 512, 1, 1), float32] /* ty=Tensor[(2048, 512, 1, 1), float32] span=from_string:604:26 */, %layer4_0_bn3_weight: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:603:26 */, %layer4_0_bn3_bias: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:608:20 */, %layer4_0_bn3_running_mean: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:606:19 */, %layer4_0_bn3_running_var: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:600:14 */, %layer4_0_downsample_0_weight: Tensor[(2048, 1024, 1, 1), float32] /* ty=Tensor[(2048, 1024, 1, 1), float32] span=from_string:615:26 */, %layer4_0_downsample_1_weight: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:614:26 */, %layer4_0_downsample_1_bias: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:619:20 */, %layer4_0_downsample_1_running_mean: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:617:19 */, %layer4_0_downsample_1_running_var: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:611:14 */, %layer4_1_conv1_weight: Tensor[(512, 2048, 1, 1), float32] /* ty=Tensor[(512, 2048, 1, 1), float32] span=from_string:630:26 */, %layer4_1_bn1_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:629:26 */, %layer4_1_bn1_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:634:20 */, %layer4_1_bn1_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:632:19 */, %layer4_1_bn1_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:626:14 */, %layer4_1_conv2_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] span=from_string:643:26 */, %layer4_1_bn2_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:642:26 */, %layer4_1_bn2_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:647:20 */, %layer4_1_bn2_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:645:19 */, %layer4_1_bn2_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:639:14 */, %layer4_1_conv3_weight: Tensor[(2048, 512, 1, 1), float32] /* ty=Tensor[(2048, 512, 1, 1), float32] span=from_string:656:26 */, %layer4_1_bn3_weight: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:655:26 */, %layer4_1_bn3_bias: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:660:20 */, %layer4_1_bn3_running_mean: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:658:19 */, %layer4_1_bn3_running_var: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:652:14 */, %layer4_2_conv1_weight: Tensor[(512, 2048, 1, 1), float32] /* ty=Tensor[(512, 2048, 1, 1), float32] span=from_string:670:26 */, %layer4_2_bn1_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:669:26 */, %layer4_2_bn1_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:674:20 */, %layer4_2_bn1_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:672:19 */, %layer4_2_bn1_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:666:14 */, %layer4_2_conv2_weight: Tensor[(512, 512, 3, 3), float32] /* ty=Tensor[(512, 512, 3, 3), float32] span=from_string:683:26 */, %layer4_2_bn2_weight: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:682:26 */, %layer4_2_bn2_bias: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:687:20 */, %layer4_2_bn2_running_mean: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:685:19 */, %layer4_2_bn2_running_var: Tensor[(512), float32] /* ty=Tensor[(512), float32] span=from_string:679:14 */, %layer4_2_conv3_weight: Tensor[(2048, 512, 1, 1), float32] /* ty=Tensor[(2048, 512, 1, 1), float32] span=from_string:696:26 */, %layer4_2_bn3_weight: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:695:26 */, %layer4_2_bn3_bias: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:700:20 */, %layer4_2_bn3_running_mean: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:698:19 */, %layer4_2_bn3_running_var: Tensor[(2048), float32] /* ty=Tensor[(2048), float32] span=from_string:692:14 */, %fc_weight: Tensor[(1000, 2048), float32] /* ty=Tensor[(1000, 2048), float32] span=from_string:708:20 */, %fc_bias: Tensor[(1000), float32] /* ty=Tensor[(1000), float32] span=from_string:712:13 */) -> Tensor[(1, 1000), float32] {
  %0 = add(%bn1_running_var, 1e-05f /* ty=float32 span=from_string:4:36 */) /* ty=Tensor[(64), float32] span=from_string:5:13 */;
  %1 = sqrt(%0) /* ty=Tensor[(64), float32] span=from_string:6:36 */;
  %2 = divide(1f /* ty=float32 span=from_string:6:17 */, %1) /* ty=Tensor[(64), float32] span=from_string:7:18 */;
  %3 = multiply(%2, %bn1_weight) /* ty=Tensor[(64), float32] span=from_string:11:22 */;
  %4 = nn.conv2d(%image, %conv1_weight, strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]) /* ty=Tensor[(1, 64, 112, 112), float32] span=from_string:13:18 */;
  %5 = expand_dims(%3, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:13:22 */;
  %6 = negative(%bn1_running_mean) /* ty=Tensor[(64), float32] span=from_string:11:18 */;
  %7 = multiply(%6, %3) /* ty=Tensor[(64), float32] span=from_string:12:12 */;
  %8 = add(%7, %bn1_bias) /* ty=Tensor[(64), float32] span=from_string:14:21 */;
  %9 = multiply(%4, %5) /* ty=Tensor[(1, 64, 112, 112), float32] span=from_string:15:13 */;
  %10 = expand_dims(%8, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:15:17 */;
  %11 = add(%9, %10) /* ty=Tensor[(1, 64, 112, 112), float32] span=from_string:16:17 */;
  %12 = nn.relu(%11) /* ty=Tensor[(1, 64, 112, 112), float32] span=from_string:17:24 */;
  %13 = nn.max_pool2d(%12, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:59:19 */;
  %14 = add(%layer1_0_bn1_running_var, 1e-05f /* ty=float32 span=from_string:18:46 */) /* ty=Tensor[(64), float32] span=from_string:19:14 */;
  %15 = sqrt(%14) /* ty=Tensor[(64), float32] span=from_string:20:37 */;
  %16 = divide(1f /* ty=float32 span=from_string:20:18 */, %15) /* ty=Tensor[(64), float32] span=from_string:21:19 */;
  %17 = multiply(%16, %layer1_0_bn1_weight) /* ty=Tensor[(64), float32] span=from_string:25:24 */;
  %18 = nn.conv2d(%13, %layer1_0_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:27:19 */;
  %19 = expand_dims(%17, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:27:24 */;
  %20 = negative(%layer1_0_bn1_running_mean) /* ty=Tensor[(64), float32] span=from_string:25:19 */;
  %21 = multiply(%20, %17) /* ty=Tensor[(64), float32] span=from_string:26:13 */;
  %22 = add(%21, %layer1_0_bn1_bias) /* ty=Tensor[(64), float32] span=from_string:28:21 */;
  %23 = multiply(%18, %19) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:29:13 */;
  %24 = expand_dims(%22, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:29:18 */;
  %25 = add(%23, %24) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:30:17 */;
  %26 = nn.relu(%25) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:35:19 */;
  %27 = add(%layer1_0_bn2_running_var, 1e-05f /* ty=float32 span=from_string:31:46 */) /* ty=Tensor[(64), float32] span=from_string:32:14 */;
  %28 = sqrt(%27) /* ty=Tensor[(64), float32] span=from_string:33:37 */;
  %29 = divide(1f /* ty=float32 span=from_string:33:18 */, %28) /* ty=Tensor[(64), float32] span=from_string:34:19 */;
  %30 = multiply(%29, %layer1_0_bn2_weight) /* ty=Tensor[(64), float32] span=from_string:38:24 */;
  %31 = nn.conv2d(%26, %layer1_0_conv2_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:40:19 */;
  %32 = expand_dims(%30, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:40:24 */;
  %33 = negative(%layer1_0_bn2_running_mean) /* ty=Tensor[(64), float32] span=from_string:38:19 */;
  %34 = multiply(%33, %30) /* ty=Tensor[(64), float32] span=from_string:39:13 */;
  %35 = add(%34, %layer1_0_bn2_bias) /* ty=Tensor[(64), float32] span=from_string:41:21 */;
  %36 = multiply(%31, %32) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:42:13 */;
  %37 = expand_dims(%35, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:42:18 */;
  %38 = add(%36, %37) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:43:17 */;
  %39 = nn.relu(%38) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:48:19 */;
  %40 = add(%layer1_0_bn3_running_var, 1e-05f /* ty=float32 span=from_string:44:46 */) /* ty=Tensor[(256), float32] span=from_string:45:14 */;
  %41 = sqrt(%40) /* ty=Tensor[(256), float32] span=from_string:46:37 */;
  %42 = divide(1f /* ty=float32 span=from_string:46:18 */, %41) /* ty=Tensor[(256), float32] span=from_string:47:19 */;
  %43 = multiply(%42, %layer1_0_bn3_weight) /* ty=Tensor[(256), float32] span=from_string:51:24 */;
  %44 = nn.conv2d(%39, %layer1_0_conv3_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:53:19 */;
  %45 = expand_dims(%43, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:53:24 */;
  %46 = negative(%layer1_0_bn3_running_mean) /* ty=Tensor[(256), float32] span=from_string:51:19 */;
  %47 = multiply(%46, %43) /* ty=Tensor[(256), float32] span=from_string:52:13 */;
  %48 = add(%47, %layer1_0_bn3_bias) /* ty=Tensor[(256), float32] span=from_string:54:21 */;
  %49 = multiply(%44, %45) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:66:13 */;
  %50 = expand_dims(%48, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:66:18 */;
  %51 = add(%layer1_0_downsample_1_running_var, 1e-05f /* ty=float32 span=from_string:55:55 */) /* ty=Tensor[(256), float32] span=from_string:56:14 */;
  %52 = sqrt(%51) /* ty=Tensor[(256), float32] span=from_string:57:37 */;
  %53 = divide(1f /* ty=float32 span=from_string:57:18 */, %52) /* ty=Tensor[(256), float32] span=from_string:58:19 */;
  %54 = multiply(%53, %layer1_0_downsample_1_weight) /* ty=Tensor[(256), float32] span=from_string:62:24 */;
  %55 = nn.conv2d(%13, %layer1_0_downsample_0_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:64:19 */;
  %56 = expand_dims(%54, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:64:24 */;
  %57 = negative(%layer1_0_downsample_1_running_mean) /* ty=Tensor[(256), float32] span=from_string:62:19 */;
  %58 = multiply(%57, %54) /* ty=Tensor[(256), float32] span=from_string:63:13 */;
  %59 = add(%58, %layer1_0_downsample_1_bias) /* ty=Tensor[(256), float32] span=from_string:65:21 */;
  %60 = multiply(%55, %56) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:67:13 */;
  %61 = expand_dims(%59, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:67:18 */;
  %62 = add(%49, %50) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:68:13 */;
  %63 = add(%60, %61) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:68:18 */;
  %64 = add(%62, %63) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:69:17 */;
  %65 = nn.relu(%64) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:108:20 */;
  %66 = add(%layer1_1_bn1_running_var, 1e-05f /* ty=float32 span=from_string:70:46 */) /* ty=Tensor[(64), float32] span=from_string:71:14 */;
  %67 = sqrt(%66) /* ty=Tensor[(64), float32] span=from_string:72:37 */;
  %68 = divide(1f /* ty=float32 span=from_string:72:18 */, %67) /* ty=Tensor[(64), float32] span=from_string:73:19 */;
  %69 = multiply(%68, %layer1_1_bn1_weight) /* ty=Tensor[(64), float32] span=from_string:77:24 */;
  %70 = nn.conv2d(%65, %layer1_1_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:79:19 */;
  %71 = expand_dims(%69, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:79:24 */;
  %72 = negative(%layer1_1_bn1_running_mean) /* ty=Tensor[(64), float32] span=from_string:77:19 */;
  %73 = multiply(%72, %69) /* ty=Tensor[(64), float32] span=from_string:78:13 */;
  %74 = add(%73, %layer1_1_bn1_bias) /* ty=Tensor[(64), float32] span=from_string:80:21 */;
  %75 = multiply(%70, %71) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:81:13 */;
  %76 = expand_dims(%74, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:81:18 */;
  %77 = add(%75, %76) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:82:17 */;
  %78 = nn.relu(%77) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:87:19 */;
  %79 = add(%layer1_1_bn2_running_var, 1e-05f /* ty=float32 span=from_string:83:46 */) /* ty=Tensor[(64), float32] span=from_string:84:14 */;
  %80 = sqrt(%79) /* ty=Tensor[(64), float32] span=from_string:85:37 */;
  %81 = divide(1f /* ty=float32 span=from_string:85:18 */, %80) /* ty=Tensor[(64), float32] span=from_string:86:19 */;
  %82 = multiply(%81, %layer1_1_bn2_weight) /* ty=Tensor[(64), float32] span=from_string:90:24 */;
  %83 = nn.conv2d(%78, %layer1_1_conv2_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:92:19 */;
  %84 = expand_dims(%82, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:92:24 */;
  %85 = negative(%layer1_1_bn2_running_mean) /* ty=Tensor[(64), float32] span=from_string:90:19 */;
  %86 = multiply(%85, %82) /* ty=Tensor[(64), float32] span=from_string:91:13 */;
  %87 = add(%86, %layer1_1_bn2_bias) /* ty=Tensor[(64), float32] span=from_string:93:21 */;
  %88 = multiply(%83, %84) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:94:13 */;
  %89 = expand_dims(%87, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:94:18 */;
  %90 = add(%88, %89) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:95:17 */;
  %91 = nn.relu(%90) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:100:19 */;
  %92 = add(%layer1_1_bn3_running_var, 1e-05f /* ty=float32 span=from_string:96:46 */) /* ty=Tensor[(256), float32] span=from_string:97:14 */;
  %93 = sqrt(%92) /* ty=Tensor[(256), float32] span=from_string:98:37 */;
  %94 = divide(1f /* ty=float32 span=from_string:98:18 */, %93) /* ty=Tensor[(256), float32] span=from_string:99:19 */;
  %95 = multiply(%94, %layer1_1_bn3_weight) /* ty=Tensor[(256), float32] span=from_string:103:24 */;
  %96 = nn.conv2d(%91, %layer1_1_conv3_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:105:20 */;
  %97 = expand_dims(%95, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:105:25 */;
  %98 = negative(%layer1_1_bn3_running_mean) /* ty=Tensor[(256), float32] span=from_string:103:19 */;
  %99 = multiply(%98, %95) /* ty=Tensor[(256), float32] span=from_string:104:14 */;
  %100 = add(%99, %layer1_1_bn3_bias) /* ty=Tensor[(256), float32] span=from_string:106:22 */;
  %101 = multiply(%96, %97) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:107:14 */;
  %102 = expand_dims(%100, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:107:20 */;
  %103 = add(%101, %102) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:108:14 */;
  %104 = add(%103, %65) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:109:18 */;
  %105 = nn.relu(%104) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:148:20 */;
  %106 = add(%layer1_2_bn1_running_var, 1e-05f /* ty=float32 span=from_string:110:47 */) /* ty=Tensor[(64), float32] span=from_string:111:15 */;
  %107 = sqrt(%106) /* ty=Tensor[(64), float32] span=from_string:112:38 */;
  %108 = divide(1f /* ty=float32 span=from_string:112:19 */, %107) /* ty=Tensor[(64), float32] span=from_string:113:20 */;
  %109 = multiply(%108, %layer1_2_bn1_weight) /* ty=Tensor[(64), float32] span=from_string:117:26 */;
  %110 = nn.conv2d(%105, %layer1_2_conv1_weight, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:119:20 */;
  %111 = expand_dims(%109, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:119:26 */;
  %112 = negative(%layer1_2_bn1_running_mean) /* ty=Tensor[(64), float32] span=from_string:117:20 */;
  %113 = multiply(%112, %109) /* ty=Tensor[(64), float32] span=from_string:118:14 */;
  %114 = add(%113, %layer1_2_bn1_bias) /* ty=Tensor[(64), float32] span=from_string:120:22 */;
  %115 = multiply(%110, %111) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:121:14 */;
  %116 = expand_dims(%114, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:121:20 */;
  %117 = add(%115, %116) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:122:18 */;
  %118 = nn.relu(%117) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:127:20 */;
  %119 = add(%layer1_2_bn2_running_var, 1e-05f /* ty=float32 span=from_string:123:47 */) /* ty=Tensor[(64), float32] span=from_string:124:15 */;
  %120 = sqrt(%119) /* ty=Tensor[(64), float32] span=from_string:125:38 */;
  %121 = divide(1f /* ty=float32 span=from_string:125:19 */, %120) /* ty=Tensor[(64), float32] span=from_string:126:20 */;
  %122 = multiply(%121, %layer1_2_bn2_weight) /* ty=Tensor[(64), float32] span=from_string:130:26 */;
  %123 = nn.conv2d(%118, %layer1_2_conv2_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:132:20 */;
  %124 = expand_dims(%122, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:132:26 */;
  %125 = negative(%layer1_2_bn2_running_mean) /* ty=Tensor[(64), float32] span=from_string:130:20 */;
  %126 = multiply(%125, %122) /* ty=Tensor[(64), float32] span=from_string:131:14 */;
  %127 = add(%126, %layer1_2_bn2_bias) /* ty=Tensor[(64), float32] span=from_string:133:22 */;
  %128 = multiply(%123, %124) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:134:14 */;
  %129 = expand_dims(%127, axis=1, num_newaxis=2) /* ty=Tensor[(64, 1, 1), float32] span=from_string:134:20 */;
  %130 = add(%128, %129) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:135:18 */;
  %131 = nn.relu(%130) /* ty=Tensor[(1, 64, 56, 56), float32] span=from_string:140:20 */;
  %132 = add(%layer1_2_bn3_running_var, 1e-05f /* ty=float32 span=from_string:136:47 */) /* ty=Tensor[(256), float32] span=from_string:137:15 */;
  %133 = sqrt(%132) /* ty=Tensor[(256), float32] span=from_string:138:38 */;
  %134 = divide(1f /* ty=float32 span=from_string:138:19 */, %133) /* ty=Tensor[(256), float32] span=from_string:139:20 */;
  %135 = multiply(%134, %layer1_2_bn3_weight) /* ty=Tensor[(256), float32] span=from_string:143:26 */;
  %136 = nn.conv2d(%131, %layer1_2_conv3_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:145:20 */;
  %137 = expand_dims(%135, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:145:26 */;
  %138 = negative(%layer1_2_bn3_running_mean) /* ty=Tensor[(256), float32] span=from_string:143:20 */;
  %139 = multiply(%138, %135) /* ty=Tensor[(256), float32] span=from_string:144:14 */;
  %140 = add(%139, %layer1_2_bn3_bias) /* ty=Tensor[(256), float32] span=from_string:146:22 */;
  %141 = multiply(%136, %137) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:147:14 */;
  %142 = expand_dims(%140, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:147:20 */;
  %143 = add(%141, %142) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:148:14 */;
  %144 = add(%143, %105) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:149:18 */;
  %145 = nn.relu(%144) /* ty=Tensor[(1, 256, 56, 56), float32] span=from_string:191:20 */;
  %146 = add(%layer2_0_bn1_running_var, 1e-05f /* ty=float32 span=from_string:150:47 */) /* ty=Tensor[(128), float32] span=from_string:151:15 */;
  %147 = sqrt(%146) /* ty=Tensor[(128), float32] span=from_string:152:38 */;
  %148 = divide(1f /* ty=float32 span=from_string:152:19 */, %147) /* ty=Tensor[(128), float32] span=from_string:153:20 */;
  %149 = multiply(%148, %layer2_0_bn1_weight) /* ty=Tensor[(128), float32] span=from_string:157:26 */;
  %150 = nn.conv2d(%145, %layer2_0_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 56, 56), float32] span=from_string:159:20 */;
  %151 = expand_dims(%149, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:159:26 */;
  %152 = negative(%layer2_0_bn1_running_mean) /* ty=Tensor[(128), float32] span=from_string:157:20 */;
  %153 = multiply(%152, %149) /* ty=Tensor[(128), float32] span=from_string:158:14 */;
  %154 = add(%153, %layer2_0_bn1_bias) /* ty=Tensor[(128), float32] span=from_string:160:22 */;
  %155 = multiply(%150, %151) /* ty=Tensor[(1, 128, 56, 56), float32] span=from_string:161:14 */;
  %156 = expand_dims(%154, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:161:20 */;
  %157 = add(%155, %156) /* ty=Tensor[(1, 128, 56, 56), float32] span=from_string:162:18 */;
  %158 = nn.relu(%157) /* ty=Tensor[(1, 128, 56, 56), float32] span=from_string:167:20 */;
  %159 = add(%layer2_0_bn2_running_var, 1e-05f /* ty=float32 span=from_string:163:47 */) /* ty=Tensor[(128), float32] span=from_string:164:15 */;
  %160 = sqrt(%159) /* ty=Tensor[(128), float32] span=from_string:165:38 */;
  %161 = divide(1f /* ty=float32 span=from_string:165:19 */, %160) /* ty=Tensor[(128), float32] span=from_string:166:20 */;
  %162 = multiply(%161, %layer2_0_bn2_weight) /* ty=Tensor[(128), float32] span=from_string:170:26 */;
  %163 = nn.conv2d(%158, %layer2_0_conv2_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:172:20 */;
  %164 = expand_dims(%162, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:172:26 */;
  %165 = negative(%layer2_0_bn2_running_mean) /* ty=Tensor[(128), float32] span=from_string:170:20 */;
  %166 = multiply(%165, %162) /* ty=Tensor[(128), float32] span=from_string:171:14 */;
  %167 = add(%166, %layer2_0_bn2_bias) /* ty=Tensor[(128), float32] span=from_string:173:22 */;
  %168 = multiply(%163, %164) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:174:14 */;
  %169 = expand_dims(%167, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:174:20 */;
  %170 = add(%168, %169) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:175:18 */;
  %171 = nn.relu(%170) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:180:20 */;
  %172 = add(%layer2_0_bn3_running_var, 1e-05f /* ty=float32 span=from_string:176:47 */) /* ty=Tensor[(512), float32] span=from_string:177:15 */;
  %173 = sqrt(%172) /* ty=Tensor[(512), float32] span=from_string:178:38 */;
  %174 = divide(1f /* ty=float32 span=from_string:178:19 */, %173) /* ty=Tensor[(512), float32] span=from_string:179:20 */;
  %175 = multiply(%174, %layer2_0_bn3_weight) /* ty=Tensor[(512), float32] span=from_string:183:26 */;
  %176 = nn.conv2d(%171, %layer2_0_conv3_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:185:20 */;
  %177 = expand_dims(%175, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:185:26 */;
  %178 = negative(%layer2_0_bn3_running_mean) /* ty=Tensor[(512), float32] span=from_string:183:20 */;
  %179 = multiply(%178, %175) /* ty=Tensor[(512), float32] span=from_string:184:14 */;
  %180 = add(%179, %layer2_0_bn3_bias) /* ty=Tensor[(512), float32] span=from_string:186:22 */;
  %181 = multiply(%176, %177) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:198:14 */;
  %182 = expand_dims(%180, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:198:20 */;
  %183 = add(%layer2_0_downsample_1_running_var, 1e-05f /* ty=float32 span=from_string:187:56 */) /* ty=Tensor[(512), float32] span=from_string:188:15 */;
  %184 = sqrt(%183) /* ty=Tensor[(512), float32] span=from_string:189:38 */;
  %185 = divide(1f /* ty=float32 span=from_string:189:19 */, %184) /* ty=Tensor[(512), float32] span=from_string:190:20 */;
  %186 = multiply(%185, %layer2_0_downsample_1_weight) /* ty=Tensor[(512), float32] span=from_string:194:26 */;
  %187 = nn.conv2d(%145, %layer2_0_downsample_0_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:196:20 */;
  %188 = expand_dims(%186, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:196:26 */;
  %189 = negative(%layer2_0_downsample_1_running_mean) /* ty=Tensor[(512), float32] span=from_string:194:20 */;
  %190 = multiply(%189, %186) /* ty=Tensor[(512), float32] span=from_string:195:14 */;
  %191 = add(%190, %layer2_0_downsample_1_bias) /* ty=Tensor[(512), float32] span=from_string:197:22 */;
  %192 = multiply(%187, %188) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:199:14 */;
  %193 = expand_dims(%191, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:199:20 */;
  %194 = add(%181, %182) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:200:14 */;
  %195 = add(%192, %193) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:200:20 */;
  %196 = add(%194, %195) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:201:18 */;
  %197 = nn.relu(%196) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:240:20 */;
  %198 = add(%layer2_1_bn1_running_var, 1e-05f /* ty=float32 span=from_string:202:47 */) /* ty=Tensor[(128), float32] span=from_string:203:15 */;
  %199 = sqrt(%198) /* ty=Tensor[(128), float32] span=from_string:204:38 */;
  %200 = divide(1f /* ty=float32 span=from_string:204:19 */, %199) /* ty=Tensor[(128), float32] span=from_string:205:20 */;
  %201 = multiply(%200, %layer2_1_bn1_weight) /* ty=Tensor[(128), float32] span=from_string:209:26 */;
  %202 = nn.conv2d(%197, %layer2_1_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:211:20 */;
  %203 = expand_dims(%201, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:211:26 */;
  %204 = negative(%layer2_1_bn1_running_mean) /* ty=Tensor[(128), float32] span=from_string:209:20 */;
  %205 = multiply(%204, %201) /* ty=Tensor[(128), float32] span=from_string:210:14 */;
  %206 = add(%205, %layer2_1_bn1_bias) /* ty=Tensor[(128), float32] span=from_string:212:22 */;
  %207 = multiply(%202, %203) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:213:14 */;
  %208 = expand_dims(%206, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:213:20 */;
  %209 = add(%207, %208) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:214:18 */;
  %210 = nn.relu(%209) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:219:20 */;
  %211 = add(%layer2_1_bn2_running_var, 1e-05f /* ty=float32 span=from_string:215:47 */) /* ty=Tensor[(128), float32] span=from_string:216:15 */;
  %212 = sqrt(%211) /* ty=Tensor[(128), float32] span=from_string:217:38 */;
  %213 = divide(1f /* ty=float32 span=from_string:217:19 */, %212) /* ty=Tensor[(128), float32] span=from_string:218:20 */;
  %214 = multiply(%213, %layer2_1_bn2_weight) /* ty=Tensor[(128), float32] span=from_string:222:26 */;
  %215 = nn.conv2d(%210, %layer2_1_conv2_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:224:20 */;
  %216 = expand_dims(%214, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:224:26 */;
  %217 = negative(%layer2_1_bn2_running_mean) /* ty=Tensor[(128), float32] span=from_string:222:20 */;
  %218 = multiply(%217, %214) /* ty=Tensor[(128), float32] span=from_string:223:14 */;
  %219 = add(%218, %layer2_1_bn2_bias) /* ty=Tensor[(128), float32] span=from_string:225:22 */;
  %220 = multiply(%215, %216) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:226:14 */;
  %221 = expand_dims(%219, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:226:20 */;
  %222 = add(%220, %221) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:227:18 */;
  %223 = nn.relu(%222) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:232:20 */;
  %224 = add(%layer2_1_bn3_running_var, 1e-05f /* ty=float32 span=from_string:228:47 */) /* ty=Tensor[(512), float32] span=from_string:229:15 */;
  %225 = sqrt(%224) /* ty=Tensor[(512), float32] span=from_string:230:38 */;
  %226 = divide(1f /* ty=float32 span=from_string:230:19 */, %225) /* ty=Tensor[(512), float32] span=from_string:231:20 */;
  %227 = multiply(%226, %layer2_1_bn3_weight) /* ty=Tensor[(512), float32] span=from_string:235:26 */;
  %228 = nn.conv2d(%223, %layer2_1_conv3_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:237:20 */;
  %229 = expand_dims(%227, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:237:26 */;
  %230 = negative(%layer2_1_bn3_running_mean) /* ty=Tensor[(512), float32] span=from_string:235:20 */;
  %231 = multiply(%230, %227) /* ty=Tensor[(512), float32] span=from_string:236:14 */;
  %232 = add(%231, %layer2_1_bn3_bias) /* ty=Tensor[(512), float32] span=from_string:238:22 */;
  %233 = multiply(%228, %229) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:239:14 */;
  %234 = expand_dims(%232, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:239:20 */;
  %235 = add(%233, %234) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:240:14 */;
  %236 = add(%235, %197) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:241:18 */;
  %237 = nn.relu(%236) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:280:20 */;
  %238 = add(%layer2_2_bn1_running_var, 1e-05f /* ty=float32 span=from_string:242:47 */) /* ty=Tensor[(128), float32] span=from_string:243:15 */;
  %239 = sqrt(%238) /* ty=Tensor[(128), float32] span=from_string:244:38 */;
  %240 = divide(1f /* ty=float32 span=from_string:244:19 */, %239) /* ty=Tensor[(128), float32] span=from_string:245:20 */;
  %241 = multiply(%240, %layer2_2_bn1_weight) /* ty=Tensor[(128), float32] span=from_string:249:26 */;
  %242 = nn.conv2d(%237, %layer2_2_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:251:20 */;
  %243 = expand_dims(%241, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:251:26 */;
  %244 = negative(%layer2_2_bn1_running_mean) /* ty=Tensor[(128), float32] span=from_string:249:20 */;
  %245 = multiply(%244, %241) /* ty=Tensor[(128), float32] span=from_string:250:14 */;
  %246 = add(%245, %layer2_2_bn1_bias) /* ty=Tensor[(128), float32] span=from_string:252:22 */;
  %247 = multiply(%242, %243) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:253:14 */;
  %248 = expand_dims(%246, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:253:20 */;
  %249 = add(%247, %248) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:254:18 */;
  %250 = nn.relu(%249) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:259:20 */;
  %251 = add(%layer2_2_bn2_running_var, 1e-05f /* ty=float32 span=from_string:255:47 */) /* ty=Tensor[(128), float32] span=from_string:256:15 */;
  %252 = sqrt(%251) /* ty=Tensor[(128), float32] span=from_string:257:38 */;
  %253 = divide(1f /* ty=float32 span=from_string:257:19 */, %252) /* ty=Tensor[(128), float32] span=from_string:258:20 */;
  %254 = multiply(%253, %layer2_2_bn2_weight) /* ty=Tensor[(128), float32] span=from_string:262:26 */;
  %255 = nn.conv2d(%250, %layer2_2_conv2_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:264:20 */;
  %256 = expand_dims(%254, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:264:26 */;
  %257 = negative(%layer2_2_bn2_running_mean) /* ty=Tensor[(128), float32] span=from_string:262:20 */;
  %258 = multiply(%257, %254) /* ty=Tensor[(128), float32] span=from_string:263:14 */;
  %259 = add(%258, %layer2_2_bn2_bias) /* ty=Tensor[(128), float32] span=from_string:265:22 */;
  %260 = multiply(%255, %256) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:266:14 */;
  %261 = expand_dims(%259, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:266:20 */;
  %262 = add(%260, %261) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:267:18 */;
  %263 = nn.relu(%262) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:272:20 */;
  %264 = add(%layer2_2_bn3_running_var, 1e-05f /* ty=float32 span=from_string:268:47 */) /* ty=Tensor[(512), float32] span=from_string:269:15 */;
  %265 = sqrt(%264) /* ty=Tensor[(512), float32] span=from_string:270:38 */;
  %266 = divide(1f /* ty=float32 span=from_string:270:19 */, %265) /* ty=Tensor[(512), float32] span=from_string:271:20 */;
  %267 = multiply(%266, %layer2_2_bn3_weight) /* ty=Tensor[(512), float32] span=from_string:275:26 */;
  %268 = nn.conv2d(%263, %layer2_2_conv3_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:277:20 */;
  %269 = expand_dims(%267, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:277:26 */;
  %270 = negative(%layer2_2_bn3_running_mean) /* ty=Tensor[(512), float32] span=from_string:275:20 */;
  %271 = multiply(%270, %267) /* ty=Tensor[(512), float32] span=from_string:276:14 */;
  %272 = add(%271, %layer2_2_bn3_bias) /* ty=Tensor[(512), float32] span=from_string:278:22 */;
  %273 = multiply(%268, %269) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:279:14 */;
  %274 = expand_dims(%272, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:279:20 */;
  %275 = add(%273, %274) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:280:14 */;
  %276 = add(%275, %237) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:281:18 */;
  %277 = nn.relu(%276) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:320:20 */;
  %278 = add(%layer2_3_bn1_running_var, 1e-05f /* ty=float32 span=from_string:282:47 */) /* ty=Tensor[(128), float32] span=from_string:283:15 */;
  %279 = sqrt(%278) /* ty=Tensor[(128), float32] span=from_string:284:38 */;
  %280 = divide(1f /* ty=float32 span=from_string:284:19 */, %279) /* ty=Tensor[(128), float32] span=from_string:285:20 */;
  %281 = multiply(%280, %layer2_3_bn1_weight) /* ty=Tensor[(128), float32] span=from_string:289:26 */;
  %282 = nn.conv2d(%277, %layer2_3_conv1_weight, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:291:20 */;
  %283 = expand_dims(%281, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:291:26 */;
  %284 = negative(%layer2_3_bn1_running_mean) /* ty=Tensor[(128), float32] span=from_string:289:20 */;
  %285 = multiply(%284, %281) /* ty=Tensor[(128), float32] span=from_string:290:14 */;
  %286 = add(%285, %layer2_3_bn1_bias) /* ty=Tensor[(128), float32] span=from_string:292:22 */;
  %287 = multiply(%282, %283) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:293:14 */;
  %288 = expand_dims(%286, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:293:20 */;
  %289 = add(%287, %288) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:294:18 */;
  %290 = nn.relu(%289) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:299:20 */;
  %291 = add(%layer2_3_bn2_running_var, 1e-05f /* ty=float32 span=from_string:295:47 */) /* ty=Tensor[(128), float32] span=from_string:296:15 */;
  %292 = sqrt(%291) /* ty=Tensor[(128), float32] span=from_string:297:38 */;
  %293 = divide(1f /* ty=float32 span=from_string:297:19 */, %292) /* ty=Tensor[(128), float32] span=from_string:298:20 */;
  %294 = multiply(%293, %layer2_3_bn2_weight) /* ty=Tensor[(128), float32] span=from_string:302:26 */;
  %295 = nn.conv2d(%290, %layer2_3_conv2_weight, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:304:20 */;
  %296 = expand_dims(%294, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:304:26 */;
  %297 = negative(%layer2_3_bn2_running_mean) /* ty=Tensor[(128), float32] span=from_string:302:20 */;
  %298 = multiply(%297, %294) /* ty=Tensor[(128), float32] span=from_string:303:14 */;
  %299 = add(%298, %layer2_3_bn2_bias) /* ty=Tensor[(128), float32] span=from_string:305:22 */;
  %300 = multiply(%295, %296) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:306:14 */;
  %301 = expand_dims(%299, axis=1, num_newaxis=2) /* ty=Tensor[(128, 1, 1), float32] span=from_string:306:20 */;
  %302 = add(%300, %301) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:307:18 */;
  %303 = nn.relu(%302) /* ty=Tensor[(1, 128, 28, 28), float32] span=from_string:312:20 */;
  %304 = add(%layer2_3_bn3_running_var, 1e-05f /* ty=float32 span=from_string:308:47 */) /* ty=Tensor[(512), float32] span=from_string:309:15 */;
  %305 = sqrt(%304) /* ty=Tensor[(512), float32] span=from_string:310:38 */;
  %306 = divide(1f /* ty=float32 span=from_string:310:19 */, %305) /* ty=Tensor[(512), float32] span=from_string:311:20 */;
  %307 = multiply(%306, %layer2_3_bn3_weight) /* ty=Tensor[(512), float32] span=from_string:315:26 */;
  %308 = nn.conv2d(%303, %layer2_3_conv3_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:317:20 */;
  %309 = expand_dims(%307, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:317:26 */;
  %310 = negative(%layer2_3_bn3_running_mean) /* ty=Tensor[(512), float32] span=from_string:315:20 */;
  %311 = multiply(%310, %307) /* ty=Tensor[(512), float32] span=from_string:316:14 */;
  %312 = add(%311, %layer2_3_bn3_bias) /* ty=Tensor[(512), float32] span=from_string:318:22 */;
  %313 = multiply(%308, %309) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:319:14 */;
  %314 = expand_dims(%312, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:319:20 */;
  %315 = add(%313, %314) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:320:14 */;
  %316 = add(%315, %277) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:321:18 */;
  %317 = nn.relu(%316) /* ty=Tensor[(1, 512, 28, 28), float32] span=from_string:363:20 */;
  %318 = add(%layer3_0_bn1_running_var, 1e-05f /* ty=float32 span=from_string:322:47 */) /* ty=Tensor[(256), float32] span=from_string:323:15 */;
  %319 = sqrt(%318) /* ty=Tensor[(256), float32] span=from_string:324:38 */;
  %320 = divide(1f /* ty=float32 span=from_string:324:19 */, %319) /* ty=Tensor[(256), float32] span=from_string:325:20 */;
  %321 = multiply(%320, %layer3_0_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:329:26 */;
  %322 = nn.conv2d(%317, %layer3_0_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 28, 28), float32] span=from_string:331:20 */;
  %323 = expand_dims(%321, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:331:26 */;
  %324 = negative(%layer3_0_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:329:20 */;
  %325 = multiply(%324, %321) /* ty=Tensor[(256), float32] span=from_string:330:14 */;
  %326 = add(%325, %layer3_0_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:332:22 */;
  %327 = multiply(%322, %323) /* ty=Tensor[(1, 256, 28, 28), float32] span=from_string:333:14 */;
  %328 = expand_dims(%326, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:333:20 */;
  %329 = add(%327, %328) /* ty=Tensor[(1, 256, 28, 28), float32] span=from_string:334:18 */;
  %330 = nn.relu(%329) /* ty=Tensor[(1, 256, 28, 28), float32] span=from_string:339:20 */;
  %331 = add(%layer3_0_bn2_running_var, 1e-05f /* ty=float32 span=from_string:335:47 */) /* ty=Tensor[(256), float32] span=from_string:336:15 */;
  %332 = sqrt(%331) /* ty=Tensor[(256), float32] span=from_string:337:38 */;
  %333 = divide(1f /* ty=float32 span=from_string:337:19 */, %332) /* ty=Tensor[(256), float32] span=from_string:338:20 */;
  %334 = multiply(%333, %layer3_0_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:342:26 */;
  %335 = nn.conv2d(%330, %layer3_0_conv2_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:344:20 */;
  %336 = expand_dims(%334, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:344:26 */;
  %337 = negative(%layer3_0_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:342:20 */;
  %338 = multiply(%337, %334) /* ty=Tensor[(256), float32] span=from_string:343:14 */;
  %339 = add(%338, %layer3_0_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:345:22 */;
  %340 = multiply(%335, %336) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:346:14 */;
  %341 = expand_dims(%339, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:346:20 */;
  %342 = add(%340, %341) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:347:18 */;
  %343 = nn.relu(%342) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:352:20 */;
  %344 = add(%layer3_0_bn3_running_var, 1e-05f /* ty=float32 span=from_string:348:47 */) /* ty=Tensor[(1024), float32] span=from_string:349:15 */;
  %345 = sqrt(%344) /* ty=Tensor[(1024), float32] span=from_string:350:38 */;
  %346 = divide(1f /* ty=float32 span=from_string:350:19 */, %345) /* ty=Tensor[(1024), float32] span=from_string:351:20 */;
  %347 = multiply(%346, %layer3_0_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:355:26 */;
  %348 = nn.conv2d(%343, %layer3_0_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:357:20 */;
  %349 = expand_dims(%347, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:357:26 */;
  %350 = negative(%layer3_0_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:355:20 */;
  %351 = multiply(%350, %347) /* ty=Tensor[(1024), float32] span=from_string:356:14 */;
  %352 = add(%351, %layer3_0_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:358:22 */;
  %353 = multiply(%348, %349) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:370:14 */;
  %354 = expand_dims(%352, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:370:20 */;
  %355 = add(%layer3_0_downsample_1_running_var, 1e-05f /* ty=float32 span=from_string:359:56 */) /* ty=Tensor[(1024), float32] span=from_string:360:15 */;
  %356 = sqrt(%355) /* ty=Tensor[(1024), float32] span=from_string:361:38 */;
  %357 = divide(1f /* ty=float32 span=from_string:361:19 */, %356) /* ty=Tensor[(1024), float32] span=from_string:362:20 */;
  %358 = multiply(%357, %layer3_0_downsample_1_weight) /* ty=Tensor[(1024), float32] span=from_string:366:26 */;
  %359 = nn.conv2d(%317, %layer3_0_downsample_0_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:368:20 */;
  %360 = expand_dims(%358, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:368:26 */;
  %361 = negative(%layer3_0_downsample_1_running_mean) /* ty=Tensor[(1024), float32] span=from_string:366:20 */;
  %362 = multiply(%361, %358) /* ty=Tensor[(1024), float32] span=from_string:367:14 */;
  %363 = add(%362, %layer3_0_downsample_1_bias) /* ty=Tensor[(1024), float32] span=from_string:369:22 */;
  %364 = multiply(%359, %360) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:371:14 */;
  %365 = expand_dims(%363, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:371:20 */;
  %366 = add(%353, %354) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:372:14 */;
  %367 = add(%364, %365) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:372:20 */;
  %368 = add(%366, %367) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:373:18 */;
  %369 = nn.relu(%368) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:412:20 */;
  %370 = add(%layer3_1_bn1_running_var, 1e-05f /* ty=float32 span=from_string:374:47 */) /* ty=Tensor[(256), float32] span=from_string:375:15 */;
  %371 = sqrt(%370) /* ty=Tensor[(256), float32] span=from_string:376:38 */;
  %372 = divide(1f /* ty=float32 span=from_string:376:19 */, %371) /* ty=Tensor[(256), float32] span=from_string:377:20 */;
  %373 = multiply(%372, %layer3_1_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:381:26 */;
  %374 = nn.conv2d(%369, %layer3_1_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:383:20 */;
  %375 = expand_dims(%373, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:383:26 */;
  %376 = negative(%layer3_1_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:381:20 */;
  %377 = multiply(%376, %373) /* ty=Tensor[(256), float32] span=from_string:382:14 */;
  %378 = add(%377, %layer3_1_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:384:22 */;
  %379 = multiply(%374, %375) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:385:14 */;
  %380 = expand_dims(%378, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:385:20 */;
  %381 = add(%379, %380) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:386:18 */;
  %382 = nn.relu(%381) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:391:20 */;
  %383 = add(%layer3_1_bn2_running_var, 1e-05f /* ty=float32 span=from_string:387:47 */) /* ty=Tensor[(256), float32] span=from_string:388:15 */;
  %384 = sqrt(%383) /* ty=Tensor[(256), float32] span=from_string:389:38 */;
  %385 = divide(1f /* ty=float32 span=from_string:389:19 */, %384) /* ty=Tensor[(256), float32] span=from_string:390:20 */;
  %386 = multiply(%385, %layer3_1_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:394:26 */;
  %387 = nn.conv2d(%382, %layer3_1_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:396:20 */;
  %388 = expand_dims(%386, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:396:26 */;
  %389 = negative(%layer3_1_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:394:20 */;
  %390 = multiply(%389, %386) /* ty=Tensor[(256), float32] span=from_string:395:14 */;
  %391 = add(%390, %layer3_1_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:397:22 */;
  %392 = multiply(%387, %388) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:398:14 */;
  %393 = expand_dims(%391, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:398:20 */;
  %394 = add(%392, %393) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:399:18 */;
  %395 = nn.relu(%394) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:404:20 */;
  %396 = add(%layer3_1_bn3_running_var, 1e-05f /* ty=float32 span=from_string:400:47 */) /* ty=Tensor[(1024), float32] span=from_string:401:15 */;
  %397 = sqrt(%396) /* ty=Tensor[(1024), float32] span=from_string:402:38 */;
  %398 = divide(1f /* ty=float32 span=from_string:402:19 */, %397) /* ty=Tensor[(1024), float32] span=from_string:403:20 */;
  %399 = multiply(%398, %layer3_1_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:407:26 */;
  %400 = nn.conv2d(%395, %layer3_1_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:409:20 */;
  %401 = expand_dims(%399, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:409:26 */;
  %402 = negative(%layer3_1_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:407:20 */;
  %403 = multiply(%402, %399) /* ty=Tensor[(1024), float32] span=from_string:408:14 */;
  %404 = add(%403, %layer3_1_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:410:22 */;
  %405 = multiply(%400, %401) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:411:14 */;
  %406 = expand_dims(%404, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:411:20 */;
  %407 = add(%405, %406) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:412:14 */;
  %408 = add(%407, %369) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:413:18 */;
  %409 = nn.relu(%408) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:452:20 */;
  %410 = add(%layer3_2_bn1_running_var, 1e-05f /* ty=float32 span=from_string:414:47 */) /* ty=Tensor[(256), float32] span=from_string:415:15 */;
  %411 = sqrt(%410) /* ty=Tensor[(256), float32] span=from_string:416:38 */;
  %412 = divide(1f /* ty=float32 span=from_string:416:19 */, %411) /* ty=Tensor[(256), float32] span=from_string:417:20 */;
  %413 = multiply(%412, %layer3_2_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:421:26 */;
  %414 = nn.conv2d(%409, %layer3_2_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:423:20 */;
  %415 = expand_dims(%413, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:423:26 */;
  %416 = negative(%layer3_2_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:421:20 */;
  %417 = multiply(%416, %413) /* ty=Tensor[(256), float32] span=from_string:422:14 */;
  %418 = add(%417, %layer3_2_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:424:22 */;
  %419 = multiply(%414, %415) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:425:14 */;
  %420 = expand_dims(%418, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:425:20 */;
  %421 = add(%419, %420) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:426:18 */;
  %422 = nn.relu(%421) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:431:20 */;
  %423 = add(%layer3_2_bn2_running_var, 1e-05f /* ty=float32 span=from_string:427:47 */) /* ty=Tensor[(256), float32] span=from_string:428:15 */;
  %424 = sqrt(%423) /* ty=Tensor[(256), float32] span=from_string:429:38 */;
  %425 = divide(1f /* ty=float32 span=from_string:429:19 */, %424) /* ty=Tensor[(256), float32] span=from_string:430:20 */;
  %426 = multiply(%425, %layer3_2_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:434:26 */;
  %427 = nn.conv2d(%422, %layer3_2_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:436:20 */;
  %428 = expand_dims(%426, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:436:26 */;
  %429 = negative(%layer3_2_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:434:20 */;
  %430 = multiply(%429, %426) /* ty=Tensor[(256), float32] span=from_string:435:14 */;
  %431 = add(%430, %layer3_2_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:437:22 */;
  %432 = multiply(%427, %428) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:438:14 */;
  %433 = expand_dims(%431, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:438:20 */;
  %434 = add(%432, %433) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:439:18 */;
  %435 = nn.relu(%434) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:444:20 */;
  %436 = add(%layer3_2_bn3_running_var, 1e-05f /* ty=float32 span=from_string:440:47 */) /* ty=Tensor[(1024), float32] span=from_string:441:15 */;
  %437 = sqrt(%436) /* ty=Tensor[(1024), float32] span=from_string:442:38 */;
  %438 = divide(1f /* ty=float32 span=from_string:442:19 */, %437) /* ty=Tensor[(1024), float32] span=from_string:443:20 */;
  %439 = multiply(%438, %layer3_2_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:447:26 */;
  %440 = nn.conv2d(%435, %layer3_2_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:449:20 */;
  %441 = expand_dims(%439, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:449:26 */;
  %442 = negative(%layer3_2_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:447:20 */;
  %443 = multiply(%442, %439) /* ty=Tensor[(1024), float32] span=from_string:448:14 */;
  %444 = add(%443, %layer3_2_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:450:22 */;
  %445 = multiply(%440, %441) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:451:14 */;
  %446 = expand_dims(%444, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:451:20 */;
  %447 = add(%445, %446) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:452:14 */;
  %448 = add(%447, %409) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:453:18 */;
  %449 = nn.relu(%448) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:492:20 */;
  %450 = add(%layer3_3_bn1_running_var, 1e-05f /* ty=float32 span=from_string:454:47 */) /* ty=Tensor[(256), float32] span=from_string:455:15 */;
  %451 = sqrt(%450) /* ty=Tensor[(256), float32] span=from_string:456:38 */;
  %452 = divide(1f /* ty=float32 span=from_string:456:19 */, %451) /* ty=Tensor[(256), float32] span=from_string:457:20 */;
  %453 = multiply(%452, %layer3_3_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:461:26 */;
  %454 = nn.conv2d(%449, %layer3_3_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:463:20 */;
  %455 = expand_dims(%453, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:463:26 */;
  %456 = negative(%layer3_3_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:461:20 */;
  %457 = multiply(%456, %453) /* ty=Tensor[(256), float32] span=from_string:462:14 */;
  %458 = add(%457, %layer3_3_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:464:22 */;
  %459 = multiply(%454, %455) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:465:14 */;
  %460 = expand_dims(%458, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:465:20 */;
  %461 = add(%459, %460) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:466:18 */;
  %462 = nn.relu(%461) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:471:20 */;
  %463 = add(%layer3_3_bn2_running_var, 1e-05f /* ty=float32 span=from_string:467:47 */) /* ty=Tensor[(256), float32] span=from_string:468:15 */;
  %464 = sqrt(%463) /* ty=Tensor[(256), float32] span=from_string:469:38 */;
  %465 = divide(1f /* ty=float32 span=from_string:469:19 */, %464) /* ty=Tensor[(256), float32] span=from_string:470:20 */;
  %466 = multiply(%465, %layer3_3_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:474:26 */;
  %467 = nn.conv2d(%462, %layer3_3_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:476:20 */;
  %468 = expand_dims(%466, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:476:26 */;
  %469 = negative(%layer3_3_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:474:20 */;
  %470 = multiply(%469, %466) /* ty=Tensor[(256), float32] span=from_string:475:14 */;
  %471 = add(%470, %layer3_3_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:477:22 */;
  %472 = multiply(%467, %468) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:478:14 */;
  %473 = expand_dims(%471, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:478:20 */;
  %474 = add(%472, %473) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:479:18 */;
  %475 = nn.relu(%474) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:484:20 */;
  %476 = add(%layer3_3_bn3_running_var, 1e-05f /* ty=float32 span=from_string:480:47 */) /* ty=Tensor[(1024), float32] span=from_string:481:15 */;
  %477 = sqrt(%476) /* ty=Tensor[(1024), float32] span=from_string:482:38 */;
  %478 = divide(1f /* ty=float32 span=from_string:482:19 */, %477) /* ty=Tensor[(1024), float32] span=from_string:483:20 */;
  %479 = multiply(%478, %layer3_3_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:487:26 */;
  %480 = nn.conv2d(%475, %layer3_3_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:489:20 */;
  %481 = expand_dims(%479, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:489:26 */;
  %482 = negative(%layer3_3_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:487:20 */;
  %483 = multiply(%482, %479) /* ty=Tensor[(1024), float32] span=from_string:488:14 */;
  %484 = add(%483, %layer3_3_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:490:22 */;
  %485 = multiply(%480, %481) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:491:14 */;
  %486 = expand_dims(%484, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:491:20 */;
  %487 = add(%485, %486) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:492:14 */;
  %488 = add(%487, %449) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:493:18 */;
  %489 = nn.relu(%488) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:532:20 */;
  %490 = add(%layer3_4_bn1_running_var, 1e-05f /* ty=float32 span=from_string:494:47 */) /* ty=Tensor[(256), float32] span=from_string:495:15 */;
  %491 = sqrt(%490) /* ty=Tensor[(256), float32] span=from_string:496:38 */;
  %492 = divide(1f /* ty=float32 span=from_string:496:19 */, %491) /* ty=Tensor[(256), float32] span=from_string:497:20 */;
  %493 = multiply(%492, %layer3_4_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:501:26 */;
  %494 = nn.conv2d(%489, %layer3_4_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:503:20 */;
  %495 = expand_dims(%493, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:503:26 */;
  %496 = negative(%layer3_4_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:501:20 */;
  %497 = multiply(%496, %493) /* ty=Tensor[(256), float32] span=from_string:502:14 */;
  %498 = add(%497, %layer3_4_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:504:22 */;
  %499 = multiply(%494, %495) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:505:14 */;
  %500 = expand_dims(%498, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:505:20 */;
  %501 = add(%499, %500) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:506:18 */;
  %502 = nn.relu(%501) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:511:20 */;
  %503 = add(%layer3_4_bn2_running_var, 1e-05f /* ty=float32 span=from_string:507:47 */) /* ty=Tensor[(256), float32] span=from_string:508:15 */;
  %504 = sqrt(%503) /* ty=Tensor[(256), float32] span=from_string:509:38 */;
  %505 = divide(1f /* ty=float32 span=from_string:509:19 */, %504) /* ty=Tensor[(256), float32] span=from_string:510:20 */;
  %506 = multiply(%505, %layer3_4_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:514:26 */;
  %507 = nn.conv2d(%502, %layer3_4_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:516:20 */;
  %508 = expand_dims(%506, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:516:26 */;
  %509 = negative(%layer3_4_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:514:20 */;
  %510 = multiply(%509, %506) /* ty=Tensor[(256), float32] span=from_string:515:14 */;
  %511 = add(%510, %layer3_4_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:517:22 */;
  %512 = multiply(%507, %508) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:518:14 */;
  %513 = expand_dims(%511, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:518:20 */;
  %514 = add(%512, %513) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:519:18 */;
  %515 = nn.relu(%514) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:524:20 */;
  %516 = add(%layer3_4_bn3_running_var, 1e-05f /* ty=float32 span=from_string:520:47 */) /* ty=Tensor[(1024), float32] span=from_string:521:15 */;
  %517 = sqrt(%516) /* ty=Tensor[(1024), float32] span=from_string:522:38 */;
  %518 = divide(1f /* ty=float32 span=from_string:522:19 */, %517) /* ty=Tensor[(1024), float32] span=from_string:523:20 */;
  %519 = multiply(%518, %layer3_4_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:527:26 */;
  %520 = nn.conv2d(%515, %layer3_4_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:529:20 */;
  %521 = expand_dims(%519, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:529:26 */;
  %522 = negative(%layer3_4_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:527:20 */;
  %523 = multiply(%522, %519) /* ty=Tensor[(1024), float32] span=from_string:528:14 */;
  %524 = add(%523, %layer3_4_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:530:22 */;
  %525 = multiply(%520, %521) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:531:14 */;
  %526 = expand_dims(%524, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:531:20 */;
  %527 = add(%525, %526) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:532:14 */;
  %528 = add(%527, %489) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:533:18 */;
  %529 = nn.relu(%528) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:572:20 */;
  %530 = add(%layer3_5_bn1_running_var, 1e-05f /* ty=float32 span=from_string:534:47 */) /* ty=Tensor[(256), float32] span=from_string:535:15 */;
  %531 = sqrt(%530) /* ty=Tensor[(256), float32] span=from_string:536:38 */;
  %532 = divide(1f /* ty=float32 span=from_string:536:19 */, %531) /* ty=Tensor[(256), float32] span=from_string:537:20 */;
  %533 = multiply(%532, %layer3_5_bn1_weight) /* ty=Tensor[(256), float32] span=from_string:541:26 */;
  %534 = nn.conv2d(%529, %layer3_5_conv1_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:543:20 */;
  %535 = expand_dims(%533, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:543:26 */;
  %536 = negative(%layer3_5_bn1_running_mean) /* ty=Tensor[(256), float32] span=from_string:541:20 */;
  %537 = multiply(%536, %533) /* ty=Tensor[(256), float32] span=from_string:542:14 */;
  %538 = add(%537, %layer3_5_bn1_bias) /* ty=Tensor[(256), float32] span=from_string:544:22 */;
  %539 = multiply(%534, %535) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:545:14 */;
  %540 = expand_dims(%538, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:545:20 */;
  %541 = add(%539, %540) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:546:18 */;
  %542 = nn.relu(%541) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:551:20 */;
  %543 = add(%layer3_5_bn2_running_var, 1e-05f /* ty=float32 span=from_string:547:47 */) /* ty=Tensor[(256), float32] span=from_string:548:15 */;
  %544 = sqrt(%543) /* ty=Tensor[(256), float32] span=from_string:549:38 */;
  %545 = divide(1f /* ty=float32 span=from_string:549:19 */, %544) /* ty=Tensor[(256), float32] span=from_string:550:20 */;
  %546 = multiply(%545, %layer3_5_bn2_weight) /* ty=Tensor[(256), float32] span=from_string:554:26 */;
  %547 = nn.conv2d(%542, %layer3_5_conv2_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:556:20 */;
  %548 = expand_dims(%546, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:556:26 */;
  %549 = negative(%layer3_5_bn2_running_mean) /* ty=Tensor[(256), float32] span=from_string:554:20 */;
  %550 = multiply(%549, %546) /* ty=Tensor[(256), float32] span=from_string:555:14 */;
  %551 = add(%550, %layer3_5_bn2_bias) /* ty=Tensor[(256), float32] span=from_string:557:22 */;
  %552 = multiply(%547, %548) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:558:14 */;
  %553 = expand_dims(%551, axis=1, num_newaxis=2) /* ty=Tensor[(256, 1, 1), float32] span=from_string:558:20 */;
  %554 = add(%552, %553) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:559:18 */;
  %555 = nn.relu(%554) /* ty=Tensor[(1, 256, 14, 14), float32] span=from_string:564:20 */;
  %556 = add(%layer3_5_bn3_running_var, 1e-05f /* ty=float32 span=from_string:560:47 */) /* ty=Tensor[(1024), float32] span=from_string:561:15 */;
  %557 = sqrt(%556) /* ty=Tensor[(1024), float32] span=from_string:562:38 */;
  %558 = divide(1f /* ty=float32 span=from_string:562:19 */, %557) /* ty=Tensor[(1024), float32] span=from_string:563:20 */;
  %559 = multiply(%558, %layer3_5_bn3_weight) /* ty=Tensor[(1024), float32] span=from_string:567:26 */;
  %560 = nn.conv2d(%555, %layer3_5_conv3_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:569:20 */;
  %561 = expand_dims(%559, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:569:26 */;
  %562 = negative(%layer3_5_bn3_running_mean) /* ty=Tensor[(1024), float32] span=from_string:567:20 */;
  %563 = multiply(%562, %559) /* ty=Tensor[(1024), float32] span=from_string:568:14 */;
  %564 = add(%563, %layer3_5_bn3_bias) /* ty=Tensor[(1024), float32] span=from_string:570:22 */;
  %565 = multiply(%560, %561) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:571:14 */;
  %566 = expand_dims(%564, axis=1, num_newaxis=2) /* ty=Tensor[(1024, 1, 1), float32] span=from_string:571:20 */;
  %567 = add(%565, %566) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:572:14 */;
  %568 = add(%567, %529) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:573:18 */;
  %569 = nn.relu(%568) /* ty=Tensor[(1, 1024, 14, 14), float32] span=from_string:615:20 */;
  %570 = add(%layer4_0_bn1_running_var, 1e-05f /* ty=float32 span=from_string:574:47 */) /* ty=Tensor[(512), float32] span=from_string:575:15 */;
  %571 = sqrt(%570) /* ty=Tensor[(512), float32] span=from_string:576:38 */;
  %572 = divide(1f /* ty=float32 span=from_string:576:19 */, %571) /* ty=Tensor[(512), float32] span=from_string:577:20 */;
  %573 = multiply(%572, %layer4_0_bn1_weight) /* ty=Tensor[(512), float32] span=from_string:581:26 */;
  %574 = nn.conv2d(%569, %layer4_0_conv1_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 14, 14), float32] span=from_string:583:20 */;
  %575 = expand_dims(%573, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:583:26 */;
  %576 = negative(%layer4_0_bn1_running_mean) /* ty=Tensor[(512), float32] span=from_string:581:20 */;
  %577 = multiply(%576, %573) /* ty=Tensor[(512), float32] span=from_string:582:14 */;
  %578 = add(%577, %layer4_0_bn1_bias) /* ty=Tensor[(512), float32] span=from_string:584:22 */;
  %579 = multiply(%574, %575) /* ty=Tensor[(1, 512, 14, 14), float32] span=from_string:585:14 */;
  %580 = expand_dims(%578, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:585:20 */;
  %581 = add(%579, %580) /* ty=Tensor[(1, 512, 14, 14), float32] span=from_string:586:18 */;
  %582 = nn.relu(%581) /* ty=Tensor[(1, 512, 14, 14), float32] span=from_string:591:20 */;
  %583 = add(%layer4_0_bn2_running_var, 1e-05f /* ty=float32 span=from_string:587:47 */) /* ty=Tensor[(512), float32] span=from_string:588:15 */;
  %584 = sqrt(%583) /* ty=Tensor[(512), float32] span=from_string:589:38 */;
  %585 = divide(1f /* ty=float32 span=from_string:589:19 */, %584) /* ty=Tensor[(512), float32] span=from_string:590:20 */;
  %586 = multiply(%585, %layer4_0_bn2_weight) /* ty=Tensor[(512), float32] span=from_string:594:26 */;
  %587 = nn.conv2d(%582, %layer4_0_conv2_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:596:20 */;
  %588 = expand_dims(%586, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:596:26 */;
  %589 = negative(%layer4_0_bn2_running_mean) /* ty=Tensor[(512), float32] span=from_string:594:20 */;
  %590 = multiply(%589, %586) /* ty=Tensor[(512), float32] span=from_string:595:14 */;
  %591 = add(%590, %layer4_0_bn2_bias) /* ty=Tensor[(512), float32] span=from_string:597:22 */;
  %592 = multiply(%587, %588) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:598:14 */;
  %593 = expand_dims(%591, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:598:20 */;
  %594 = add(%592, %593) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:599:18 */;
  %595 = nn.relu(%594) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:604:20 */;
  %596 = add(%layer4_0_bn3_running_var, 1e-05f /* ty=float32 span=from_string:600:47 */) /* ty=Tensor[(2048), float32] span=from_string:601:15 */;
  %597 = sqrt(%596) /* ty=Tensor[(2048), float32] span=from_string:602:38 */;
  %598 = divide(1f /* ty=float32 span=from_string:602:19 */, %597) /* ty=Tensor[(2048), float32] span=from_string:603:20 */;
  %599 = multiply(%598, %layer4_0_bn3_weight) /* ty=Tensor[(2048), float32] span=from_string:607:26 */;
  %600 = nn.conv2d(%595, %layer4_0_conv3_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:609:20 */;
  %601 = expand_dims(%599, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:609:26 */;
  %602 = negative(%layer4_0_bn3_running_mean) /* ty=Tensor[(2048), float32] span=from_string:607:20 */;
  %603 = multiply(%602, %599) /* ty=Tensor[(2048), float32] span=from_string:608:14 */;
  %604 = add(%603, %layer4_0_bn3_bias) /* ty=Tensor[(2048), float32] span=from_string:610:22 */;
  %605 = multiply(%600, %601) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:622:14 */;
  %606 = expand_dims(%604, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:622:20 */;
  %607 = add(%layer4_0_downsample_1_running_var, 1e-05f /* ty=float32 span=from_string:611:56 */) /* ty=Tensor[(2048), float32] span=from_string:612:15 */;
  %608 = sqrt(%607) /* ty=Tensor[(2048), float32] span=from_string:613:38 */;
  %609 = divide(1f /* ty=float32 span=from_string:613:19 */, %608) /* ty=Tensor[(2048), float32] span=from_string:614:20 */;
  %610 = multiply(%609, %layer4_0_downsample_1_weight) /* ty=Tensor[(2048), float32] span=from_string:618:26 */;
  %611 = nn.conv2d(%569, %layer4_0_downsample_0_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:620:20 */;
  %612 = expand_dims(%610, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:620:26 */;
  %613 = negative(%layer4_0_downsample_1_running_mean) /* ty=Tensor[(2048), float32] span=from_string:618:20 */;
  %614 = multiply(%613, %610) /* ty=Tensor[(2048), float32] span=from_string:619:14 */;
  %615 = add(%614, %layer4_0_downsample_1_bias) /* ty=Tensor[(2048), float32] span=from_string:621:22 */;
  %616 = multiply(%611, %612) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:623:14 */;
  %617 = expand_dims(%615, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:623:20 */;
  %618 = add(%605, %606) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:624:14 */;
  %619 = add(%616, %617) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:624:20 */;
  %620 = add(%618, %619) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:625:18 */;
  %621 = nn.relu(%620) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:664:20 */;
  %622 = add(%layer4_1_bn1_running_var, 1e-05f /* ty=float32 span=from_string:626:47 */) /* ty=Tensor[(512), float32] span=from_string:627:15 */;
  %623 = sqrt(%622) /* ty=Tensor[(512), float32] span=from_string:628:38 */;
  %624 = divide(1f /* ty=float32 span=from_string:628:19 */, %623) /* ty=Tensor[(512), float32] span=from_string:629:20 */;
  %625 = multiply(%624, %layer4_1_bn1_weight) /* ty=Tensor[(512), float32] span=from_string:633:26 */;
  %626 = nn.conv2d(%621, %layer4_1_conv1_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:635:20 */;
  %627 = expand_dims(%625, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:635:26 */;
  %628 = negative(%layer4_1_bn1_running_mean) /* ty=Tensor[(512), float32] span=from_string:633:20 */;
  %629 = multiply(%628, %625) /* ty=Tensor[(512), float32] span=from_string:634:14 */;
  %630 = add(%629, %layer4_1_bn1_bias) /* ty=Tensor[(512), float32] span=from_string:636:22 */;
  %631 = multiply(%626, %627) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:637:14 */;
  %632 = expand_dims(%630, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:637:20 */;
  %633 = add(%631, %632) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:638:18 */;
  %634 = nn.relu(%633) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:643:20 */;
  %635 = add(%layer4_1_bn2_running_var, 1e-05f /* ty=float32 span=from_string:639:47 */) /* ty=Tensor[(512), float32] span=from_string:640:15 */;
  %636 = sqrt(%635) /* ty=Tensor[(512), float32] span=from_string:641:38 */;
  %637 = divide(1f /* ty=float32 span=from_string:641:19 */, %636) /* ty=Tensor[(512), float32] span=from_string:642:20 */;
  %638 = multiply(%637, %layer4_1_bn2_weight) /* ty=Tensor[(512), float32] span=from_string:646:26 */;
  %639 = nn.conv2d(%634, %layer4_1_conv2_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:648:20 */;
  %640 = expand_dims(%638, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:648:26 */;
  %641 = negative(%layer4_1_bn2_running_mean) /* ty=Tensor[(512), float32] span=from_string:646:20 */;
  %642 = multiply(%641, %638) /* ty=Tensor[(512), float32] span=from_string:647:14 */;
  %643 = add(%642, %layer4_1_bn2_bias) /* ty=Tensor[(512), float32] span=from_string:649:22 */;
  %644 = multiply(%639, %640) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:650:14 */;
  %645 = expand_dims(%643, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:650:20 */;
  %646 = add(%644, %645) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:651:18 */;
  %647 = nn.relu(%646) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:656:20 */;
  %648 = add(%layer4_1_bn3_running_var, 1e-05f /* ty=float32 span=from_string:652:47 */) /* ty=Tensor[(2048), float32] span=from_string:653:15 */;
  %649 = sqrt(%648) /* ty=Tensor[(2048), float32] span=from_string:654:38 */;
  %650 = divide(1f /* ty=float32 span=from_string:654:19 */, %649) /* ty=Tensor[(2048), float32] span=from_string:655:20 */;
  %651 = multiply(%650, %layer4_1_bn3_weight) /* ty=Tensor[(2048), float32] span=from_string:659:26 */;
  %652 = nn.conv2d(%647, %layer4_1_conv3_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:661:20 */;
  %653 = expand_dims(%651, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:661:26 */;
  %654 = negative(%layer4_1_bn3_running_mean) /* ty=Tensor[(2048), float32] span=from_string:659:20 */;
  %655 = multiply(%654, %651) /* ty=Tensor[(2048), float32] span=from_string:660:14 */;
  %656 = add(%655, %layer4_1_bn3_bias) /* ty=Tensor[(2048), float32] span=from_string:662:22 */;
  %657 = multiply(%652, %653) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:663:14 */;
  %658 = expand_dims(%656, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:663:20 */;
  %659 = add(%657, %658) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:664:14 */;
  %660 = add(%659, %621) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:665:18 */;
  %661 = nn.relu(%660) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:704:20 */;
  %662 = add(%layer4_2_bn1_running_var, 1e-05f /* ty=float32 span=from_string:666:47 */) /* ty=Tensor[(512), float32] span=from_string:667:15 */;
  %663 = sqrt(%662) /* ty=Tensor[(512), float32] span=from_string:668:38 */;
  %664 = divide(1f /* ty=float32 span=from_string:668:19 */, %663) /* ty=Tensor[(512), float32] span=from_string:669:20 */;
  %665 = multiply(%664, %layer4_2_bn1_weight) /* ty=Tensor[(512), float32] span=from_string:673:26 */;
  %666 = nn.conv2d(%661, %layer4_2_conv1_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:675:20 */;
  %667 = expand_dims(%665, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:675:26 */;
  %668 = negative(%layer4_2_bn1_running_mean) /* ty=Tensor[(512), float32] span=from_string:673:20 */;
  %669 = multiply(%668, %665) /* ty=Tensor[(512), float32] span=from_string:674:14 */;
  %670 = add(%669, %layer4_2_bn1_bias) /* ty=Tensor[(512), float32] span=from_string:676:22 */;
  %671 = multiply(%666, %667) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:677:14 */;
  %672 = expand_dims(%670, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:677:20 */;
  %673 = add(%671, %672) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:678:18 */;
  %674 = nn.relu(%673) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:683:20 */;
  %675 = add(%layer4_2_bn2_running_var, 1e-05f /* ty=float32 span=from_string:679:47 */) /* ty=Tensor[(512), float32] span=from_string:680:15 */;
  %676 = sqrt(%675) /* ty=Tensor[(512), float32] span=from_string:681:38 */;
  %677 = divide(1f /* ty=float32 span=from_string:681:19 */, %676) /* ty=Tensor[(512), float32] span=from_string:682:20 */;
  %678 = multiply(%677, %layer4_2_bn2_weight) /* ty=Tensor[(512), float32] span=from_string:686:26 */;
  %679 = nn.conv2d(%674, %layer4_2_conv2_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:688:20 */;
  %680 = expand_dims(%678, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:688:26 */;
  %681 = negative(%layer4_2_bn2_running_mean) /* ty=Tensor[(512), float32] span=from_string:686:20 */;
  %682 = multiply(%681, %678) /* ty=Tensor[(512), float32] span=from_string:687:14 */;
  %683 = add(%682, %layer4_2_bn2_bias) /* ty=Tensor[(512), float32] span=from_string:689:22 */;
  %684 = multiply(%679, %680) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:690:14 */;
  %685 = expand_dims(%683, axis=1, num_newaxis=2) /* ty=Tensor[(512, 1, 1), float32] span=from_string:690:20 */;
  %686 = add(%684, %685) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:691:18 */;
  %687 = nn.relu(%686) /* ty=Tensor[(1, 512, 7, 7), float32] span=from_string:696:20 */;
  %688 = add(%layer4_2_bn3_running_var, 1e-05f /* ty=float32 span=from_string:692:47 */) /* ty=Tensor[(2048), float32] span=from_string:693:15 */;
  %689 = sqrt(%688) /* ty=Tensor[(2048), float32] span=from_string:694:38 */;
  %690 = divide(1f /* ty=float32 span=from_string:694:19 */, %689) /* ty=Tensor[(2048), float32] span=from_string:695:20 */;
  %691 = multiply(%690, %layer4_2_bn3_weight) /* ty=Tensor[(2048), float32] span=from_string:699:26 */;
  %692 = nn.conv2d(%687, %layer4_2_conv3_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:701:20 */;
  %693 = expand_dims(%691, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:701:26 */;
  %694 = negative(%layer4_2_bn3_running_mean) /* ty=Tensor[(2048), float32] span=from_string:699:20 */;
  %695 = multiply(%694, %691) /* ty=Tensor[(2048), float32] span=from_string:700:14 */;
  %696 = add(%695, %layer4_2_bn3_bias) /* ty=Tensor[(2048), float32] span=from_string:702:22 */;
  %697 = multiply(%692, %693) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:703:14 */;
  %698 = expand_dims(%696, axis=1, num_newaxis=2) /* ty=Tensor[(2048, 1, 1), float32] span=from_string:703:20 */;
  %699 = add(%697, %698) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:704:14 */;
  %700 = add(%699, %661) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:705:18 */;
  %701 = nn.relu(%700) /* ty=Tensor[(1, 2048, 7, 7), float32] span=from_string:706:33 */;
  %702 = nn.adaptive_avg_pool2d(%701, output_size=[1, 1]) /* ty=Tensor[(1, 2048, 1, 1), float32] span=from_string:707:18 */;
  %703 = reshape(%702, newshape=[0, -1, 1, 1]) /* ty=Tensor[(1, 2048, 1, 1), float32] span=from_string:709:18 */;
  %704 = transpose(%fc_weight, axes=[1, 0]) /* ty=Tensor[(2048, 1000), float32] span=from_string:710:20 */;
  %705 = squeeze(%703, axis=[2, 3]) /* ty=Tensor[(1, 2048), float32] span=from_string:711:19 */;
  %706 = transpose(%704, axes=[1, 0]) /* ty=Tensor[(1000, 2048), float32] span=from_string:711:25 */;
  %707 = nn.dense(%705, %706, units=1000) /* ty=Tensor[(1, 1000), float32] span=from_string:712:7 */;
  add(%707, %fc_bias) /* ty=Tensor[(1, 1000), float32] span=from_string:4:3 */
}