#[version = "0.0.5"]
def @main(%data: Tensor[(1, 3, 32), float32], %weights: Tensor[(8, 3, 3), float32]) -> Tensor[(1, 8, 19), float32] {
  let %var_3: Tensor[(1, 3, 39), float32] = nn.pad(%data, 0 /* ty=int32 */, pad_width=[[0, 0], [0, 0], [3, 4]]) /* ty=Tensor[(1, 3, 39), float32] */;
  %0 = strided_slice(%var_3, begin=[0, 0, 0], end=[1, 3, 3], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %1 = strided_slice(%var_3, begin=[0, 0, 2], end=[1, 3, 5], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %2 = strided_slice(%var_3, begin=[0, 0, 4], end=[1, 3, 7], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %3 = strided_slice(%var_3, begin=[0, 0, 6], end=[1, 3, 9], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %4 = strided_slice(%var_3, begin=[0, 0, 8], end=[1, 3, 11], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %5 = strided_slice(%var_3, begin=[0, 0, 10], end=[1, 3, 13], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %6 = strided_slice(%var_3, begin=[0, 0, 12], end=[1, 3, 15], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %7 = strided_slice(%var_3, begin=[0, 0, 14], end=[1, 3, 17], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %8 = strided_slice(%var_3, begin=[0, 0, 16], end=[1, 3, 19], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %9 = strided_slice(%var_3, begin=[0, 0, 18], end=[1, 3, 21], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %10 = strided_slice(%var_3, begin=[0, 0, 20], end=[1, 3, 23], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %11 = strided_slice(%var_3, begin=[0, 0, 22], end=[1, 3, 25], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %12 = strided_slice(%var_3, begin=[0, 0, 24], end=[1, 3, 27], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %13 = strided_slice(%var_3, begin=[0, 0, 26], end=[1, 3, 29], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %14 = strided_slice(%var_3, begin=[0, 0, 28], end=[1, 3, 31], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %15 = strided_slice(%var_3, begin=[0, 0, 30], end=[1, 3, 33], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %16 = strided_slice(%var_3, begin=[0, 0, 32], end=[1, 3, 35], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %17 = strided_slice(%var_3, begin=[0, 0, 34], end=[1, 3, 37], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %18 = strided_slice(%var_3, begin=[0, 0, 36], end=[1, 3, 39], strides=[1]) /* ty=Tensor[(1, 3, 3), float32] */;
  %19 = expand_dims(%0, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %20 = expand_dims(%1, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %21 = expand_dims(%2, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %22 = expand_dims(%3, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %23 = expand_dims(%4, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %24 = expand_dims(%5, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %25 = expand_dims(%6, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %26 = expand_dims(%7, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %27 = expand_dims(%8, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %28 = expand_dims(%9, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %29 = expand_dims(%10, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %30 = expand_dims(%11, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %31 = expand_dims(%12, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %32 = expand_dims(%13, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %33 = expand_dims(%14, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %34 = expand_dims(%15, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %35 = expand_dims(%16, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %36 = expand_dims(%17, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %37 = expand_dims(%18, axis=1) /* ty=Tensor[(1, 1, 3, 3), float32] */;
  %38 = (%19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34, %35, %36, %37);
  %39 = concatenate(%38, axis=1) /* ty=Tensor[(1, 19, 3, 3), float32] */;
  %40 = expand_dims(%39, axis=1) /* ty=Tensor[(1, 1, 19, 3, 3), float32] */;
  %41 = (%40,);
  %42 = concatenate(%41, axis=1) /* ty=Tensor[(1, 1, 19, 3, 3), float32] */;
  %43 = (%42,);
  let %var_4: Tensor[(1, 1, 19, 3, 3), float32] = concatenate(%43) /* ty=Tensor[(1, 1, 19, 3, 3), float32] */;
  let %var_5: Tensor[(1, 19, 3, 3), float32] = squeeze(%var_4, axis=[1]) /* ty=Tensor[(1, 19, 3, 3), float32] */;
  let %var_6: Tensor[(8, 9), float32] = reshape(%weights, newshape=[8, 9]) /* ty=Tensor[(8, 9), float32] */;
  let %var_7: Tensor[(19, 9), float32] = reshape(%var_5, newshape=[19, 9]) /* ty=Tensor[(19, 9), float32] */;
  let %var_8: Tensor[(8, 19), float32] = nn.dense(%var_6, %var_7, units=None) /* ty=Tensor[(8, 19), float32] */;
  let %var_9: Tensor[(8, 1, 19), float32] = reshape(%var_8, newshape=[8, 1, 19]) /* ty=Tensor[(8, 1, 19), float32] */;
  transpose(%var_9, axes=[1, 0, 2]) /* ty=Tensor[(1, 8, 19), float32] */
}

